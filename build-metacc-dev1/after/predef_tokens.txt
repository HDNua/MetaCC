;                                     SEMICOLON
library                               LIBRARY_
,                                     COMMA
-incdir                               DASH_INCDIR_
include                               INCLUDE_
endmodule                             ENDMODULE_
:                                     COLON
extern                                EXTERN_
module                                MODULE_
macromodule                           MACROMODULE_
endinterface                          ENDINTERFACE_
interface                             INTERFACE_
(                                     LP
.*                                    DOT_STAR
)                                     RP
endprogram                            ENDPROGRAM_
program                               PROGRAM_
checker                               CHECKER_
endchecker                            ENDCHECKER_
virtual                               VIRTUAL_
class                                 CLASS_
extends                               EXTENDS_
implements                            IMPLEMENTS_
endclass                              ENDCLASS_
package                               PACKAGE_
endpackage                            ENDPACKAGE_
timeunit                              TIMEUNIT_
/                                     SLASH
timeprecision                         TIMEPRECISION_
#                                     SHARP
type                                  TYPE_
.                                     DOT
{                                     LMP
}                                     RMP
input                                 INPUT_
output                                OUTPUT_
inout                                 INOUT_
ref                                   REF_
=                                     EQ
dollarsign_fatal                      DOLLAR_FATAL_
dollarsign_error                      DOLLAR_ERROR_
dollarsign_warning                    DOLLAR_WARNING_
dollarsign_info                       DOLLAR_INFO_
0                                     ZERO_
1                                     ONE_
2                                     TWO_
default                               DEFAULT_
clocking                              CLOCKING_
disable                               DISABLE_
iff                                   IFF_
defparam                              DEFPARAM_
bind                                  BIND_
config                                CONFIG_
endconfig                             ENDCONFIG_
design                                DESIGN_
instance                              INSTANCE_
cell                                  CELL_
liblist                               LIBLIST_
use                                   USE_
forkjoin                              FORKJOIN_
rand                                  RAND_
const                                 CONST_
pure                                  PURE_
function                              FUNCTION_
new                                   NEW_
static                                STATIC_
protected                             PROTECTED_
local                                 LOCAL_
randc                                 RANDC_
super                                 SUPER_
endfunction                           ENDFUNCTION_
constraint                            CONSTRAINT_
solve                                 SOLVE_
before                                BEFORE_
soft                                  SOFT_
->                                    RIGHTARROW
if                                    IF_
else                                  ELSE_
foreach                               FOREACH_
[                                     LSP
]                                     RSP
unique                                UNIQUE_
:=                                    COLON_EQUAL
:/                                    COLON_SLASH
localparam                            LOCALPARAM_
parameter                             PARAMETER_
specparam                             SPECPARAM_
var                                   VAR_
import                                IMPORT_
::                                    COLON2
*                                     STAR
export                                EXPORT_
*::*                                  STAR_COLON2_STAR
genvar                                GENVAR_
vectored                              VECTORED_
scalared                              SCALARED_
interconnect                          INTERCONNECT_
typedef                               TYPEDEF_
enum                                  ENUM_
struct                                STRUCT_
union                                 UNION_
nettype                               NETTYPE_
with                                  WITH_
automatic                             AUTOMATIC_
string                                STRING_
packed                                PACKED_
chandle                               CHANDLE_
event                                 EVENT_
byte                                  BYTE_
shortint                              SHORTINT_
int                                   INT_
longint                               LONGINT_
integer                               INTEGER_
time                                  TIME_
bit                                   BIT_
logic                                 LOGIC_
reg                                   REG_
shortreal                             SHORTREAL_
real                                  REAL_
realtime                              REALTIME_
supply0                               SUPPLY0_
supply1                               SUPPLY1_
tri                                   TRI_
triand                                TRIAND_
trior                                 TRIOR_
trireg                                TRIREG_
tri0                                  TRI0_
tri1                                  TRI1_
uwire                                 UWIRE_
wire                                  WIRE_
wand                                  WAND_
wor                                   WOR_
signed                                SIGNED_
unsigned                              UNSIGNED_
void                                  VOID_
tagged                                TAGGED_
highz1                                HIGHZ1_
highz0                                HIGHZ0_
strong0                               STRONG0_
pull0                                 PULL0_
weak0                                 WEAK0_
strong1                               STRONG1_
pull1                                 PULL1_
weak1                                 WEAK1_
small                                 SMALL_
medium                                MEDIUM_
large                                 LARGE_
1step                                 ONESTEP_
dollarsign_                           DOLLAR_
task                                  TASK_
DPI-C                                 DPI_C_
DPI                                   DPI_
context                               CONTEXT_
endtask                               ENDTASK_
+                                     PLUS
++                                    PLUS2
-                                     MINUS
--                                    MINUS2
**                                    STAR2
%                                     PERCENT
==                                    EQ2
!=                                    NEQ
<                                     LT
<=                                    LTE
>                                     GT
>=                                    GTE
modport                               MODPORT_
assert                                ASSERT_
property                              PROPERTY_
assume                                ASSUME_
cover                                 COVER_
expect                                EXPECT_
sequence                              SEQUENCE_
restrict                              RESTRICT_
endproperty                           ENDPROPERTY_
strong                                STRONG_
weak                                  WEAK_
not                                   NOT_
or                                    OR_
and                                   AND_
|->                                   BAR_DASH_GT
|=>                                   BAR_EQ_GT
case                                  CASE_
endcase                               ENDCASE_
#-#                                   SHARP_DASH_SHARP
#=#                                   SHARP_EQ_SHARP
nexttime                              NEXTTIME_
s_nexttime                            S_NEXTTIME_
always                                ALWAYS_
s_always                              S_ALWAYS_
s_eventually                          S_EVENTUALLY_
until                                 UNTIL_
s_until                               S_UNTIL_
until_with                            UNTIL_WITH_
s_until_with                          S_UNTIL_WITH_
implies                               IMPLIES_
accept_on                             ACCEPT_ON_
reject_on                             REJECT_ON_
sync_accept_on                        SYNC_ACCEPT_ON_
sync_reject_on                        SYNC_REJECT_ON_
endsequence                           ENDSEQUENCE_
untyped                               UNTYPED_
intersect                             INTERSECT_
first_match                           FIRST_MATCH_
throughout                            THROUGHOUT_
within                                WITHIN_
##                                    SHARP2
[*]                                   LSP_STAR_RSP
[+]                                   LSP_PLUS_RSP
[*                                    LSP_STAR
[=                                    LSP_EQ
[->                                   LSP_DASH_GT
dist                                  DIST_
let                                   LET_
covergroup                            COVERGROUP_
endgroup                              ENDGROUP_
option                                OPTION_
type_option                           TYPE_OPTION_
sample                                SAMPLE_
@@                                    AT2
begin                                 BEGIN_
end                                   END_
coverpoint                            COVERPOINT_
wildcard                              WILDCARD_
bins                                  BINS_
illegal_bins                          ILLEGRAL_BINS_
ignore_bins                           IGNORE_BINS_
=>                                    EQ_GT
cross                                 CROSS_
!                                     NOT
&&                                    AND2
||                                    BAR2
matches                               MATCHES_
binsof                                BINSOF_
pulldown                              PULLDOWN_
pullup                                PULLUP_
cmos                                  CMOS_
rcmos                                 RCMOS_
bufif0                                BUFIF0_
bufif1                                BUFIF1_
notif0                                NOTIF0_
notif1                                NOTIF1_
nmos                                  NMOS_
pmos                                  PMOS_
rnmos                                 RNMOS_
rpmos                                 RPMOS_
nand                                  NAND_
nor                                   NOR_
xor                                   XOR_
xnor                                  XNOR_
buf                                   BUF_
tranif0                               TRANIF0_
tranif1                               TRANIF1_
rtranif0                              RTRANIF0_
rtranif1                              RTRANIF1_
tran                                  TRAN_
rtran                                 RTRAN_
generate                              GENERATE_
endgenerate                           ENDGENERATE_
for                                   FOR_
primitive                             PRIMITIVE_
endprimitive                          ENDPRIMITIVE_
table                                 TABLE_
endtable                              ENDTABLE_
initial                               INITIAL_
1'b0                                  ONEBIT_GND
1'b1                                  ONEBIT_VDD
1'bx                                  ONEBIT_X0
1'bX                                  ONEBIT_X1
1'B0                                  ONEBIT_BGND
1'B1                                  ONEBIT_BVDD
1'Bx                                  ONEBIT_BX0
1'BX                                  ONEBIT_BX1
x                                     LETTER_X0_
X                                     LETTER_X1_
?                                     QMARK
b                                     LETTER_B0_
B                                     LETTER_B1_
r                                     LETTER_R0_
R                                     LETTER_R1_
f                                     LETTER_F0_
F                                     LETTER_F1_
p                                     LETTER_P0_
P                                     LETTER_P1_
n                                     LETTER_N0_
N                                     LETTER_N1_
assign                                ASSIGN_
alias                                 ALIAS_
always_comb                           ALWAYS_COMB_
always_latch                          ALWAYS_LATCH_
always_ff                             ALWAYS_FF_
final                                 FINAL_
+=                                    PLUS_EQ
-=                                    MINUS_EQ
*=                                    STAR_EQ
/=                                    SLASH_EQ
%=                                    PERCENT_EQ
&=                                    AND_EQ
|=                                    BAR_EQ
^=                                    XOR_EQ
<<=                                   LSHIFT_EQ
>>=                                   RSHIFT_EQ
<<<=                                  LSHIFT2_EQ
>>>=                                  RSHIFT2_EQ
deassign                              DEASSIGN_
force                                 FORCE_
release                               RELEASE_
fork                                  FORK_
join                                  JOIN_
join_any                              JOIN_ANY_
join_none                             JOIN_NONE_
repeat                                REPEAT_
@                                     AT
return                                RETURN_
break                                 BREAK_
continue                              CONTINUE_
wait                                  WAIT_
wait_order                            WAIT_ORDER_
->>                                   DASH_RSHIFT
unique0                               UNIQUE0_
priority                              PRIORITY_
&&&                                   AND3
inside                                INSIDE_
casex                                 CASEX_
casez                                 CASEZ_
randcase                              RANDCASE_
'                                     APOSTROPHE
forever                               FOREVER_
while                                 WHILE_
do                                    DO_
#0                                    SHARP0_
endclocking                           ENDCLOCKING_
global                                GLOBAL_
randsequence                          RANDSEQUENCE_
|                                     BAR_
specify                               SPECIFY_
endspecify                            ENDSPECIFY_
pulsestyle_onevent                    PULSESTYLE_ONEVENT_
pulsestyle_ondetect                   PULSESTYPE_ONDETECT_
showcancelled                         SHOWCANCELLED_
noshowcancelled                       NOSHOWCANCELLED_
*>                                    STAR_RT
posedge                               POSEDGE_
negedge                               NEGEDGE_
edge                                  EDGE_
ifnone                                IFNONE_
dollarsign_setup                      DOLLAR_SETUP_
dollarsign_hold                       DOLLAR_HOLD_
dollarsign_setuphold                  DOLLAR_SETUPHOLD_
dollarsign_recovery                   DOLLAR_RECOVERY_
dollarsign_removal                    DOLLAR_REMOVAL_
dollarsign_recrem                     DOLLAR_RECREM_
dollarsign_skew                       DOLLAR_SKEW_
dollarsign_timeskew                   DOLLAR_TIMESKEW_
dollarsign_fullskew                   DOLLAR_FULLSKEW_
dollarsign_period                     DOLLAR_PERIOD_
dollarsign_width                      DOLLAR_WIDTH_
dollarsign_nochange                   DOLLAR_NOCHANGE_
01                                    ZERO_ONE
10                                    ONE_ZERO
z                                     LETTER_Z0_
Z                                     LETTER_Z1_
~                                     WAVE
===                                   EQ3
!==                                   NEQ2
'b0                                   APOSTROPHE_B0_GND
'b1                                   APOSTROPHE_B0_VDD
'B0                                   APOSTROPHE_B1_GND
'B1                                   APOSTROPHE_B1_VDD
>>                                    RSHIFT
<<                                    LSHIFT
+:                                    PLUS_COLON
-:                                    MINUS_COLON
std::                                 STD_COLON2
randomize                             RANDOMIZE_
null                                  NULL_
this                                  THIS_
local::                               LOCAL_COLON2
s                                     LETTER_S0_
ms                                    MS_
us                                    US_
ns                                    NS_
ps                                    PS_
fs                                    FS_
&                                     AND
~&                                    WAVE_AND
~|                                    WAVE_BAR
^                                     XOR
~^                                    WAVE_XOR
^~                                    XOR_WAVE
==?                                   EQ2_QMARK
!=?                                   NEQ_QMARK
>>>                                   RSHIFT2
<<<                                   LSHIFT2
<->                                   LT_DASH_RT
'0                                    APOSTROPHE_GND
'1                                    APOSTROPHE_VDD
(*                                    LP_STAR
*)                                    STAR_RP
dollarsign_unit                       DOLLAR_UNIT_
