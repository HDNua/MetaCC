EXE=metacc
YACC=bison
YACC_SRC=*.yy
LEX=flex
LEX_SRC=*.l
LINK=-lfl -lm
CC_SRC=*.cpp
CC=g++

default: all

all: clean yacc lex cc

debug: debug_build test

debug_build: clean yacc_dbg lex_dbg cc_dbg

yacc:
	$(YACC) -d $(YACC_SRC)

lex:
	$(LEX) $(LEX_SRC) --outfile=sv_lexer.yy.cc

cc: 
	$(CC) -o $(EXE) $(CC_SRC) $(LINK)

yacc_dbg:
	$(YACC) -g -d -v -t $(YACC_SRC)

lex_dbg:
	$(LEX) $(LEX_SRC) --outfile=sv_lexer.yy.cc

cc_dbg: 
	$(CC) -g -o $(EXE) $(CC_SRC) $(LINK) -DYYDEBUG 

test: test2

test2:
	./$(EXE) lyc < symbols.list

test3:
	./$(EXE) lyc < symbols.list
	make clean_lyc

clean:
	rmtmp
	rm -rf *.java
	# rm -rf y.tab.c y.tab.h lex.yy.c
	rm -rf sv_parser.yy.tab.cc y.tab.h lex.yy.c
	rm -rf y.output y.dot
	rm -rf $(EXE)
	if [ -f out/Makefile ]; then \
		mv out/Makefile Makefile_out; \
	fi
	rm -rf out/*
	if [ -f Makefile_out ]; then \
		mv Makefile_out out/Makefile; \
	fi

clean_lyc:
	rm -rf out/parser.l.*
	rm -rf out/parser.y.*
	rm -rf out/parser_ast.c.*
	rm -rf out/parser_ast.h.*
